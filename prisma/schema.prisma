generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  arrests   ArrestEvent[]
  investigations Investigation[]
  assignments    Assignment[]
  auditTrails    AuditTrail[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Case {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?
  status         String   @default("New Arrest")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  arrests        ArrestEvent[]
  evidences      Evidence[]
  investigations Investigation[]
  victims        Victim[]
  witnesses      Witness[]
  courtEvents    CourtEvent[]
  assignments    Assignment[]
  auditTrails    AuditTrail[]
}

model ArrestEvent {
  id          Int      @id @default(autoincrement())
  case        Case     @relation(fields: [caseId], references: [id])
  caseId      Int
  officer     User     @relation(fields: [officerId], references: [id])
  officerId   Int
  person      Person   @relation(fields: [personId], references: [id])
  personId    Int
  arrestedAt  DateTime @default(now())
  location    String
  notes       String?
}

model Person {
  id        Int      @id @default(autoincrement())
  name      String
  dob       DateTime
  address   String?
  phone     String?
  email     String?  @unique
  photoUrl  String?
  arrests   ArrestEvent[]
}

model Evidence {
  id          Int      @id @default(autoincrement())
  case        Case     @relation(fields: [caseId], references: [id])
  caseId      Int
  type        String
  description String
  collectedAt DateTime @default(now())
  fileUrl     String?
}

model Investigation {
  id             Int      @id @default(autoincrement())
  case           Case     @relation(fields: [caseId], references: [id])
  caseId         Int
  assignedTo     User     @relation(fields: [assignedToId], references: [id])
  assignedToId   Int
  summary        String?
  status         String   @default("Open")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Victim {
  id          Int      @id @default(autoincrement())
  case        Case     @relation(fields: [caseId], references: [id])
  caseId      Int
  name        String
  contactInfo String?
  statement   String?
}

model Witness {
  id          Int      @id @default(autoincrement())
  case        Case     @relation(fields: [caseId], references: [id])
  caseId      Int
  name        String
  contactInfo String?
  statement   String?
}

model CourtEvent {
  id             Int      @id @default(autoincrement())
  case           Case     @relation(fields: [caseId], references: [id])
  caseId         Int
  eventType      String
  dateTime       DateTime
  court          Court    @relation(fields: [courtId], references: [id])
  courtId        Int
  presidingJudge String?
  outcome        String?
  notes          String?
}

model Assignment {
  id           Int      @id @default(autoincrement())
  case         Case     @relation(fields: [caseId], references: [id])
  caseId       Int
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  role         String
  assignedDate DateTime @default(now())
}

model AuditTrail {
  id        Int      @id @default(autoincrement())
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  action    String
  timestamp DateTime @default(now())
}

model Region {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  districts District[]
}

model District {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  region   Region   @relation(fields: [regionId], references: [id])
  regionId Int
  cities   City[]
}

model City {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  district       District        @relation(fields: [districtId], references: [id])
  districtId     Int
  policeStations PoliceStation[]
  courts         Court[]
}

model PoliceStation {
  id     Int    @id @default(autoincrement())
  name   String @unique
  city   City   @relation(fields: [cityId], references: [id])
  cityId Int
}

model Court {
  id     Int         @id @default(autoincrement())
  name   String      @unique
  city   City        @relation(fields: [cityId], references: [id])
  cityId Int
  events CourtEvent[]
}
