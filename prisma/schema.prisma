// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique
  password        String
  role            Role             @relation(fields: [roleId], references: [id])
  roleId          Int
  actions         ActionHistory[]
  prosecutorNotes ProsecutorNote[]
  notifications   Notification[]
  Booking         Booking[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Person {
  id           Int           @id @default(autoincrement())
  name         String
  dob          DateTime
  photoUrl     String?
  address      String?
  phone        String?
  email        String?       @unique
  bookings     Booking[]
  nextOfKin    NextOfKin[]
  deletedAt    DateTime?
  rebookedAt   DateTime?
  affiliations Affiliation[]
}

model Booking {
  id                     Int                  @id @default(autoincrement())
  person                 Person               @relation(fields: [personId], references: [id])
  personId               Int
  bookingDate            DateTime             @default(now())
  status                 String
  charges                String?
  policeStation          PoliceStation?       @relation(fields: [policeStationId], references: [id])
  policeStationId        Int?
  case                   Case?
  incarcerationStartDate DateTime?
  facilityName           String?
  rehabilitationPrograms String?
  releaseDate            DateTime?
  paroleEligibility      DateTime?
  arrestingOfficerId     Int?
  arrestingOfficer       User?                @relation(fields: [arrestingOfficerId], references: [id])
  officerNotes           String?
  disciplinaryActions    DisciplinaryAction[]
  visitationLogs         VisitationLog[]
  releasedAt             DateTime?
  custodyExpiresAt       DateTime?
  remandRequests         RemandRequest[]
  releaseRecord          ReleaseRecord?
}

model Case {
  id                     Int              @id @default(autoincrement())
  caseNumber             String           @unique
  booking                Booking          @relation(fields: [bookingId], references: [id])
  bookingId              Int              @unique
  status                 String
  crimeSceneDetails      String?
  interrogationLogs      String?
  preliminaryFindings    String?
  evidence               Evidence[]
  witnesses              Witness[]
  hearings               Hearing[]
  actions                ActionHistory[]
  victims                Victim[]
  prosecutorNotes        ProsecutorNote[]
  pleaBargains           PleaBargain[]
  investigations         Investigation[]
  bailDecisions          BailDecision[]
  recommendedCharges     String?
  riskAssessment         String?
  evidenceStrengthRating Int?
  warrants               Warrant[]
  searchWarrants         SearchWarrant[]
  lawyers                Lawyer[]
  medicalRecords         MedicalRecord[]
  deletedAt              DateTime?
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
}

model Region {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  districts District[]
}

model District {
  id       Int    @id @default(autoincrement())
  name     String @unique
  region   Region @relation(fields: [regionId], references: [id])
  regionId Int
  cities   City[]
}

model City {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  district   District @relation(fields: [districtId], references: [id])
  districtId Int
}

model PoliceStation {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  cityId   Int
  bookings Booking[]
}

model Court {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  cityId   Int
  hearings Hearing[]
}

model Evidence {
  id              Int       @id @default(autoincrement())
  description     String
  fileUrl         String
  case            Case      @relation(fields: [caseId], references: [id])
  caseId          Int
  receivedFrom    String?
  storageLocation String?
  dateReceived    DateTime?
  version         Int       @default(1)
  tags            String?
  evidenceType    String?
  serialNumber    String?
  ballisticsInfo  String?
}

model Witness {
  id            Int     @id @default(autoincrement())
  name          String
  statement     String
  case          Case    @relation(fields: [caseId], references: [id])
  caseId        Int
  testimonyType String?
  testimonyUrl  String?
}

model Hearing {
  id          Int      @id @default(autoincrement())
  court       Court    @relation(fields: [courtId], references: [id])
  courtId     Int
  hearingDate DateTime
  verdict     String?
  case        Case     @relation(fields: [caseId], references: [id])
  caseId      Int
}

model ActionHistory {
  id        Int      @id @default(autoincrement())
  action    String
  notes     String?
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    Int
}

model Affiliation {
  id           Int    @id @default(autoincrement())
  personId     Int
  person       Person @relation(fields: [personId], references: [id])
  organization String
  type         String // gang, extremist, terrorist
}

model RemandRequest {
  id            Int       @id @default(autoincrement())
  bookingId     Int
  booking       Booking   @relation(fields: [bookingId], references: [id])
  requestedBy   String
  reason        String
  requestedDays Int
  status        String // pending, approved, rejected
  judgeId       Int?
  decisionDate  DateTime?
}

model ReleaseRecord {
  id          Int      @id @default(autoincrement())
  bookingId   Int      @unique
  booking     Booking  @relation(fields: [bookingId], references: [id])
  releasedBy  String
  releaseDate DateTime
  reason      String
  notes       String?
}

model DisciplinaryAction {
  id         Int      @id @default(autoincrement())
  bookingId  Int
  booking    Booking  @relation(fields: [bookingId], references: [id])
  date       DateTime
  infraction String
  sanction   String
  notes      String?
}

model VisitationLog {
  id          Int      @id @default(autoincrement())
  bookingId   Int
  booking     Booking  @relation(fields: [bookingId], references: [id])
  visitorName String
  date        DateTime
  notes       String?
}

model Lawyer {
  id              Int           @id @default(autoincrement())
  name            String
  firm            String
  license         String        @unique
  case            Case          @relation(fields: [caseId], references: [id])
  caseId          Int
  visits          LawyerVisit[]
  areaOfExpertise String?
  barNumber       String?
}

model LawyerVisit {
  id        Int      @id @default(autoincrement())
  visitDate DateTime @default(now())
  notes     String?
  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  lawyerId  Int
}

model ProsecutorNote {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  caseId    Int
  case      Case     @relation(fields: [caseId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model PleaBargain {
  id        Int      @id @default(autoincrement())
  caseId    Int
  case      Case     @relation(fields: [caseId], references: [id])
  offer     String
  status    String // Proposed, Accepted, Rejected
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Investigation {
  id                      Int     @id @default(autoincrement())
  caseId                  Int
  case                    Case    @relation(fields: [caseId], references: [id])
  investigatorName        String
  investigatorBadgeNumber String
  investigatorRank        String
  details                 String?
  media                   Media[]
}

model Media {
  id              Int           @id @default(autoincrement())
  url             String
  type            String // video, audio, image
  investigationId Int
  investigation   Investigation @relation(fields: [investigationId], references: [id])
}

model BailDecision {
  id         Int      @id @default(autoincrement())
  caseId     Int
  amount     Float
  status     String // e.g., "Granted", "Denied", "Revoked"
  conditions String?
  decidedAt  DateTime @default(now())
  judgeName  String
  case       Case     @relation(fields: [caseId], references: [id])
}

model MedicalRecord {
  id          Int                  @id @default(autoincrement())
  bookingId   Int
  condition   String
  allergies   String?
  notes       String?
  case        Case                 @relation(fields: [caseId], references: [id])
  caseId      Int
  medications MedicationSchedule[]
}

model MedicationSchedule {
  id            Int           @id @default(autoincrement())
  medicalId     Int
  medication    String
  dosage        String
  frequency     String
  startDate     DateTime
  endDate       DateTime?
  medicalRecord MedicalRecord @relation(fields: [medicalId], references: [id])
}

model NextOfKin {
  id           Int     @id @default(autoincrement())
  personId     Int
  name         String
  relationship String
  phone        String
  address      String?
  person       Person  @relation(fields: [personId], references: [id])
  roleInLife   String?
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Warrant {
  id        Int      @id @default(autoincrement())
  caseId    Int
  case      Case     @relation(fields: [caseId], references: [id])
  status    String // "Issued", "Executed", "Expired"
  details   String
  issuedAt  DateTime @default(now())
  expiresAt DateTime
}

model SearchWarrant {
  id            Int      @id @default(autoincrement())
  caseId        Int
  requestedBy   String
  reason        String
  targetType    String
  targetDetails String
  dateRequested DateTime @default(now())
  status        String
  case          Case     @relation(fields: [caseId], references: [id])
}

model Victim {
  id        Int      @id @default(autoincrement())
  name      String
  dob       DateTime
  photoUrl  String?
  address   String?
  phone     String?
  email     String?  @unique
  statement String?
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    Int
}
